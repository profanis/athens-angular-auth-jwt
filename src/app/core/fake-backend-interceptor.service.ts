import { Injectable } from "@angular/core";
import { HttpInterceptor, HttpEvent, HttpHandler, HttpRequest, HttpResponse } from '@angular/common/http';
import { Observable, of, throwError } from 'rxjs';
import { mergeMap, delay } from 'rxjs/operators';

/**
 * The jwt has been generated by:
 * https://jwt.io/#debugger-io?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IlByb2ZhbmlzIiwiZmlyc3QiOiJmYW5pcyIsImxhc3QiOiJwcm9kcm9tb3UiLCJpZCI6MTIzNDU2Nzg5MH0.kapCeAT7ad4qti9zmIIypkKCmFCZJsB_wnEOQS0_Lo4
*/

@Injectable()
export class FakeBackendInterceptor implements HttpInterceptor {

  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {

    return of(null).pipe(
        mergeMap(() => {

          // authenticate
          if (req.url.endsWith('/login') && req.method === 'POST') {
            const token = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IlByb2ZhbmlzIiwiZmlyc3QiOiJmYW5pcyIsImxhc3QiOiJwcm9kcm9tb3UiLCJpZCI6MTIzNDU2Nzg5MH0.kapCeAT7ad4qti9zmIIypkKCmFCZJsB_wnEOQS0_Lo4";
            if (req.body.username === "profanis" && req.body.password === "profanis") {
              return of(new HttpResponse({ status: 200, body: token }));
            } else {
                // else return 400 bad request
                return throwError('Username or password is incorrect');
            }
          }

          return next.handle(req);
        }),
        delay(1000)
      )

  }

}
